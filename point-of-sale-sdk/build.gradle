/*
 * Copyright (C) 2016 Square, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'

def gitSha() {
  return 'git rev-parse --short HEAD'.execute().text.trim()
}

dependencies {
  implementation 'androidx.annotation:annotation:1.6.0'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.robolectric:robolectric:4.10'
  testImplementation 'org.mockito:mockito-core:5.3.0'
  testImplementation 'org.assertj:assertj-core:3.24.2'
}

android {
  repositories {
    mavenLocal()
    mavenCentral()
    google()
  }
  resourcePrefix 'point_of_sale_sdk_'
  compileSdkVersion rootProject.ext.compileSdkVersion
  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
    buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
    consumerProguardFiles 'consumer-proguard-rules.pro'
  }
}

apply from: rootProject.file('gradle/checkstyle.gradle')
apply from: rootProject.file('gradle/gradle-mvn-push.gradle')